{"version":3,"sources":["pages/PageCustomerEdit/PageCustomerEdit.module.css","pages/PageCustomerList/PageCustomerList.module.css","components/Sidebar/Sidebar.module.css","layouts/DefaultLayout/DefaultLayout.module.css","pages/PageLogin/PageLogin.module.css","core/UserContext.js","core/api/httpClient.js","core/api/user/me.js","components/Sidebar/Sidebar.js","layouts/DefaultLayout/DefaultLayout.js","components/Alert.js","components/LoginForm/LoginForm.js","pages/PageLogin/PageLogin.js","core/api/companies/getCompanies.js","core/api/companies/getCompanyById.js","core/api/companies/createCompany.js","core/api/companies/patchCompany.js","pages/PageCustomerList/PageCustomerList.js","core/api/companies/deleteCompany.js","pages/PageCustomerEdit/PageCustomerEdit.js","core/api/companies/bank-details/getBankDetails.js","core/api/companies/bank-details/createBankDetails.js","core/api/companies/bank-details/patchBankDetails.js","core/api/companies/bank-details/deleteBankDetails.js","App.js","core/api/token/createToken.js","reportWebVitals.js","index.js"],"names":["module","exports","UserContext","createContext","httpClient","axios","create","baseURL","getMe","get","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","Sidebar","logout","Drawer","className","styles","variant","classes","paper","Drawer__paper","anchor","Drawer__header","Divider","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","onClick","DefaultLayout","children","Alert","props","elevation","LoginForm","login","useState","open","setOpen","showPassword","setShowPassword","email","setEmail","password","setPassword","handleClose","Paper","Box","padding","onSubmit","e","preventDefault","catch","err","Typography","color","marginTop","TextField","margin","label","fullWidth","value","onChange","target","FormControl","InputLabel","shrink","htmlFor","OutlinedInput","id","type","bubbles","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","event","edge","labelWidth","display","justifyContent","Button","Snackbar","autoHideDuration","onClose","severity","PageLogin","getCompanies","page","params","getCompanyById","createCompany","data","post","patchCompany","patch","defaultFilter","name","region","city","defaultAlert","message","PageCustomerList","isDialogOpen","setDialogOpen","editItemId","setEditItemId","alert","setAlert","rowsPerPage","setRowsPerPage","totalClients","setTotalClients","clients","setClients","filter","setFilter","setPage","handleDelete","delete","deleteCompany","then","c","useEffect","results","count","regions","useMemo","Array","from","Set","map","trim","r","types","filteredClients","result","includes","slice","AppBar","Root","Toolbar","MenuButton","Title","Page","Filter","Select","MenuItem","item","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","width","align","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","ClientEditDialog","updatedData","defaultData","shortname","registered_type","phone","description","setData","handleChange","state","handleCloseAlert","console","log","error","Dialog","aria-labelledby","DialogTitle","DialogContent","setTimeout","response","key","Object","keys","Grid","container","spacing","xs","md","required","rows","multiline","DialogActions","form","TabPanel","index","role","hidden","paddingTop","Loading","defaultValues","PageCustomerEdit","useParams","tab","setTab","values","setValues","onChangeField","checked","val","merged","forEach","k","details","setDetails","companyId","ordering","search","getBankDetails","Tabs","idx","Tab","alignContent","workscope","registered_name","bin_iin","leader","leader_position","registered_address","address","FormControlLabel","control","Switch","labelPlacement","tax_payer","SaveButtonWrap","size","title","columns","field","localization","pagination","labelDisplayedRows","toolbar","nRowsSelected","header","actions","body","emptyDataSourceMessage","filterRow","filterTooltip","editable","onRowAdd","newData","onRowUpdate","oldData","patchBankDetails","d","onRowDelete","deleteBankDetails","ACCESS_TOKEN_KEY","App","user","setUser","createToken","access","setItem","removeItem","ctxUser","exact","path","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,KAAO,+BAA+B,WAAa,qCAAqC,MAAQ,gCAAgC,KAAO,+BAA+B,eAAiB,yCAAyC,QAAU,oC,oBCA5PD,EAAOC,QAAU,CAAC,KAAO,+BAA+B,WAAa,qCAAqC,MAAQ,gCAAgC,KAAO,+BAA+B,OAAS,mC,oBCAjMD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,cAAgB,+BAA+B,eAAiB,kC,oBCAnHD,EAAOC,QAAU,CAAC,cAAgB,uC,oBCAlCD,EAAOC,QAAU,CAAC,UAAY,+B,iKCEjBC,EAAcC,wBAAc,M,SCD5BC,E,OAAaC,EAAMC,OAAO,CACnCC,QAAS,YCDN,SAASC,IACZ,OAAOJ,EAAWK,IAAI,aDG1BL,EAAWM,aAAaC,QAAQC,KAAI,SAAUC,GAC1C,IAAMC,EAAQC,aAAaC,QAAQ,gBAEnC,OADAH,EAAOI,QAAQC,cAAiBJ,EAAK,iBAAaA,GAAU,GACrDD,K,+GEKJ,SAASM,EAAT,GAA8B,IAAXC,EAAU,EAAVA,OACxB,OACE,eAACC,EAAA,EAAD,CACEC,UAAWC,IAAOF,OAClBG,QAAQ,YACRC,QAAS,CACPC,MAAOH,IAAOI,eAEhBC,OAAO,OANT,UAQE,qBAAKN,UAAWC,IAAOM,iBACvB,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,IAArC,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,kDAExB,eAACP,EAAA,EAAD,CAAUC,QAAM,EAACO,QAASpB,EAA1B,UACE,cAACiB,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,4C,sBCjCzB,SAASE,EAAT,GAA8C,IAArBrB,EAAoB,EAApBA,OAAQsB,EAAY,EAAZA,SACpC,OAAO,sBAAKpB,UAAWC,IAAOkB,cAAvB,UACH,cAACtB,EAAD,CAASC,OAAQA,IAChBsB,K,uHCLF,SAASC,EAAMC,GACpB,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGrB,QAAQ,UAAaoB,I,wCCgB/C,SAASE,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAAS,EACTC,oBAAS,GADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAEOF,oBAAS,GAFhB,mBAE1BG,EAF0B,KAEZC,EAFY,OAGPJ,mBAAS,uBAHF,mBAG1BK,EAH0B,KAGnBC,EAHmB,OAIDN,mBAAS,YAJR,mBAI1BO,EAJ0B,KAIhBC,EAJgB,KAWjC,SAASC,IACLP,GAAQ,GASZ,OAAO,eAACQ,EAAA,EAAD,CAAOb,UAAW,EAAlB,UACH,cAACc,EAAA,EAAD,CAAKC,QAAS,EAAd,SACI,uBAAMC,SAlBd,SAAsBC,GAClBA,EAAEC,iBACFhB,EAAM,CAACM,QAAOE,aAAWS,OAAM,SAAAC,GAC3Bf,GAAQ,OAeR,UACI,cAACgB,EAAA,EAAD,CAAYC,MAAM,cAAc3C,QAAQ,KAAKU,UAAU,KAAvD,gFAGA,cAACyB,EAAA,EAAD,CAAKS,UAAW,EAAhB,SACI,cAACC,EAAA,EAAD,CACIC,OAAO,QACPC,MAAM,QACN/C,QAAQ,WACRgD,WAAS,EACTC,MAAOpB,EACPqB,SAAU,SAAAZ,GAAC,OAAIR,EAASQ,EAAEa,OAAOF,YAGzC,cAACd,EAAA,EAAD,CAAKS,UAAW,EAAhB,SACI,eAACQ,EAAA,EAAD,CAAapD,QAAQ,WAAW8C,OAAO,QAAvC,UACI,cAACO,EAAA,EAAD,CAAYC,QAAM,EAACC,QAAQ,8BAA3B,kDACA,cAACC,EAAA,EAAD,CACIC,GAAG,8BACHC,KAAM/B,EAAe,OAAS,WAC9BsB,MAAOlB,EACPe,OAAO,QACPE,WAAS,EACTE,SAAU,SAAAZ,GAAC,OAAIN,EAAYM,EAAEqB,QAAQV,QACrCW,aACA,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,EAAA,EAAD,CACAC,aAAW,6BACXhD,QArC5B,WACIY,GAAiBD,IAqCOsC,YAnC5B,SAAiCC,GAC7BA,EAAM3B,kBAmCkB4B,KAAK,MAJL,SAMCxC,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAIrCyC,WAAY,UAIxB,cAACjC,EAAA,EAAD,CAAKS,UAAW,EAAGyB,QAAQ,OAAOC,eAAe,WAAjD,SACI,cAACC,EAAA,EAAD,CAAQvE,QAAQ,YAAY2C,MAAM,UAAUe,KAAK,SAAjD,mDAMZ,cAACc,EAAA,EAAD,CAAU/C,KAAMA,EAAMgD,iBAAkB,IAAMC,QAASzC,EAAvD,SACI,cAAC,EAAD,CAAOyC,QAASzC,EAAa0C,SAAS,QAAtC,0H,sBCtFL,SAASC,EAAT,GAA+B,IAAVrD,EAAS,EAATA,MACxB,OAAO,qBAAKzB,UAAWC,IAAO6E,UAAvB,SACH,cAACtD,EAAD,CAAWC,MAAOA,M,qRCJnB,SAASsD,GAAT,GAAiC,IAATC,EAAQ,EAARA,KAC3B,OAAOlG,EAAWK,IAAI,cAAe,CAAE8F,OAAQ,CAAED,UCD9C,SAASE,GAAevB,GAC3B,OAAO7E,EAAWK,IAAX,qBAA6BwE,EAA7B,MCDJ,SAASwB,GAAcxB,EAAIyB,GAC9B,OAAOtG,EAAWuG,KAAX,qBAA8B1B,EAA9B,KAAqCyB,GCDzC,SAASE,GAAa3B,EAAIyB,GAC7B,OAAOtG,EAAWyG,MAAX,qBAA+B5B,EAA/B,KAAsCyB,G,yBC2C3CI,GAAgB,CACpBC,KAAM,GACN7B,KAAM,GACN8B,OAAQ,GACRC,KAAM,IAEFC,GAAe,CACnBjE,MAAM,EACNiC,KAAM,OACNiC,QAAS,IAEJ,SAASC,KAAoB,IAAD,EACKpE,oBAAS,GADd,mBAC1BqE,EAD0B,KACZC,EADY,OAEGtE,mBAAS,IAFZ,mBAE1BuE,EAF0B,KAEdC,EAFc,OAGPxE,mBAAS,eAAIkE,KAHN,mBAG1BO,EAH0B,KAGnBC,EAHmB,OAIK1E,mBAAS,IAJd,mBAI1B2E,EAJ0B,KAIbC,EAJa,OAKO5E,mBAAS,GALhB,mBAK1B6E,EAL0B,KAKZC,EALY,OAMH9E,mBAAS,IANN,mBAM1B+E,EAN0B,KAMjBC,EANiB,OAOLhF,mBAAS,eAAI8D,KAPR,mBAO1BmB,EAP0B,KAOlBC,EAPkB,OAQTlF,mBAAS,GARA,mBAQ1BsD,EAR0B,KAQpB6B,EARoB,KAgDjC,SAAS1E,IACPiE,EAAS,eAAIR,KAEf,SAASkB,EAAanD,GACpB,OAAO,YC3GJ,YAAgC,IAAPA,EAAM,EAANA,GAC5B,OAAO7E,EAAWiI,OAAO,cAAgBpD,ID2GvCqD,CAAcrD,GACXsD,MAAK,YAAc,EAAX7B,KACPsB,EAAW,aAAID,GAASE,QAAO,SAAAO,GAAC,OAAIA,EAAEvD,KAAOA,MAC7CyC,EAAS,CAACzE,MAAM,EAAMiC,KAAM,UAAWiC,QAAS,4HAEjDnD,OAAM,WACL0D,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,sJAItDsB,qBAAU,WACRpC,GAAa,CAAEC,KAAM,IAClBiC,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KACFA,EAAKgC,SACRhB,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,yMAEhDa,EAAWtB,EAAKgC,SAChBZ,EAAgBpB,EAAKiC,UAEtB3E,OAAM,YAAc,EAAX0C,KACRgB,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,8MAEjD,IACH,IAhEwBlC,EAgElB2D,EAAUC,mBAAQ,WACtB,OAAOC,MAAMC,KAAK,IAAIC,IAAIjB,EAAQkB,KAAI,SAAAT,GAAC,aAAI,UAACA,EAAExB,cAAH,QAAa,IAAIkC,YAAUjB,QAAO,SAAAkB,GAAC,MAAU,KAANA,OACjF,CAACpB,IACEqB,EAAQP,mBAAQ,WACpB,OAAOC,MAAMC,KAAK,IAAIC,IAAIjB,EAAQkB,KAAI,SAAAT,GAAC,aAAI,UAACA,EAAEtD,YAAH,QAAW,IAAIgE,YAAUjB,QAAO,SAAAkB,GAAC,MAAU,KAANA,OAC/E,CAACpB,IACEsB,EAAkBR,mBAAQ,WAC9B,IAAIS,EAAM,aAAOvB,GAajB,MAZoB,KAAhBE,EAAOlB,OACTuC,EAASA,EAAOrB,QAAO,SAAAO,GAAC,OAAIA,EAAEzB,KAAKwC,SAAStB,EAAOlB,UAEjC,KAAhBkB,EAAO/C,OACToE,EAASA,EAAOrB,QAAO,SAAAO,GAAC,OAAIA,EAAEtD,OAAS+C,EAAO/C,SAE1B,KAAlB+C,EAAOjB,SACTsC,EAASA,EAAOrB,QAAO,SAAAO,GAAC,OAAIA,EAAExB,SAAWiB,EAAOjB,WAE9B,KAAhBiB,EAAOhB,OACTqC,EAASA,EAAOrB,QAAO,SAAAO,GAAC,OAAIA,EAAEvB,KAAKsC,SAAStB,EAAOhB,UAE9CqC,EAAOE,MAAMlD,EAAOqB,EAAarB,EAAOqB,EAAcA,KAC5D,CAACI,EAASE,EAAQ3B,EAAMqB,IAE3B,OAAO,qCACL,cAAC8B,GAAA,EAAD,CAAQtF,MAAM,UAAUmB,SAAS,SAAShE,UAAWC,KAAOmI,KAA5D,SACE,eAACC,GAAA,EAAD,WACE,cAACpE,EAAA,EAAD,CAAYI,KAAK,QAAQxB,MAAM,UAAUqB,aAAW,2BAAOlE,UAAWC,KAAOqI,WAA7E,SACE,cAAC,KAAD,MAEF,cAAC1F,EAAA,EAAD,CAAY1C,QAAQ,KAAKF,UAAWC,KAAOsI,MAA3C,wDAGA,cAAC9D,EAAA,EAAD,CAAQvD,SAhGUyC,EAgGc,GA/F7B,WACLuC,EAAcvC,GACdqC,GAAc,KA6FyBnD,MAAM,UAAU3C,QAAQ,YAA7D,mEAIJ,eAACkC,EAAA,EAAD,CAAOpC,UAAWC,KAAOuI,KAAzB,UACE,sBAAKxI,UAAWC,KAAOwI,OAAvB,UACE,cAAC1F,EAAA,EAAD,CAAW7C,QAAQ,WAAWgD,WAAS,EAACD,MAAM,4HAAwBE,MAAOwD,EAAOlB,KAAMrC,SAAU,SAAAZ,GAAC,OAAIoE,EAAU,2BAAID,GAAL,IAAalB,KAAMjD,EAAEa,OAAOF,YAC9I,eAACG,EAAA,EAAD,CAAapD,QAAQ,WAAWgD,WAAS,EAAzC,UACE,cAACK,EAAA,EAAD,uEACA,eAACmF,GAAA,EAAD,CAAQvF,MAAOwD,EAAO/C,KAAMR,SAAU,SAAAZ,GAAC,OAAIoE,EAAU,2BAAID,GAAL,IAAa/C,KAAMpB,EAAEa,OAAOF,UAAhF,UACE,cAACwF,GAAA,EAAD,CAAUxF,MAAO,GAAjB,qEACC2E,EAAMH,KAAI,SAAAiB,GAAI,OACb,cAACD,GAAA,EAAD,CAAqBxF,MAAOyF,EAA5B,SAAmCA,GAApBA,YAIrB,eAACtF,EAAA,EAAD,CAAapD,QAAQ,WAAWgD,WAAS,EAAzC,UACE,cAACK,EAAA,EAAD,mDACA,eAACmF,GAAA,EAAD,CAAQxI,QAAQ,WAAWiD,MAAOwD,EAAOjB,OAAQtC,SAAU,SAAAZ,GAAC,OAAIoE,EAAU,2BAAID,GAAL,IAAajB,OAAQlD,EAAEa,OAAOF,UAAvG,UACE,cAACwF,GAAA,EAAD,CAAUxF,MAAO,GAAjB,qEACCmE,EAAQK,KAAI,SAAAiB,GAAI,OACf,cAACD,GAAA,EAAD,CAAqBxF,MAAOyF,EAA5B,SAAmCA,GAApBA,YAIrB,cAAC7F,EAAA,EAAD,CAAW7C,QAAQ,WAAWgD,WAAS,EAACD,MAAM,iCAAQE,MAAOwD,EAAOhB,KAAMvC,SAAU,SAAAZ,GAAC,OAAIoE,EAAU,2BAAID,GAAL,IAAahB,KAAMnD,EAAEa,OAAOF,YAC9H,cAACc,EAAA,EAAD,CAAY/C,QAAS,kBAAM0F,EAAU,eAAIpB,MAAzC,SACE,cAAC,KAAD,SAIJ,cAACqD,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,wIACA,cAACA,GAAA,EAAD,uEACA,cAACA,GAAA,EAAD,mDACA,cAACA,GAAA,EAAD,6CACA,cAACA,GAAA,EAAD,SAGJ,cAACC,GAAA,EAAD,UACGnB,EAAgBJ,KAAI,SAAAiB,GAAI,OACvB,eAACI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWE,MAAM,MAAjB,SAAwBP,EAAKnD,OAC7B,cAACwD,GAAA,EAAD,CAAWE,MAAM,KAAjB,SAAuBP,EAAKhF,MAAQ,QACpC,cAACqF,GAAA,EAAD,UAAYL,EAAKlD,QAAU,QAC3B,cAACuD,GAAA,EAAD,UAAYL,EAAKjD,MAAQ,QACzB,eAACsD,GAAA,EAAD,CAAWE,MAAM,MAAMC,MAAM,QAA7B,UACE,cAACnF,EAAA,EAAD,CAAYrD,UAAWC,IAAMC,GAAE,mBAAc8H,EAAKjF,IAAlD,SAAwD,cAAC,KAAD,MACxD,cAACM,EAAA,EAAD,CAAY/C,QAAS4F,EAAa8B,EAAKjF,IAAvC,SAA4C,cAAC,KAAD,WAPjCiF,EAAKjF,SAYxB,cAAC0F,GAAA,EAAD,UACE,cAACL,GAAA,EAAD,UACE,cAACM,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtG,MAAO,qBAAOE,OAAQ,IACxDkE,MAAOd,EACPF,YAAaA,EACbrB,KAAMA,EACNwE,YAAa,CACXC,WAAY,CAAE,aAAc,4GAC5BC,QAAQ,GAEVC,aAtKd,SAA0BvF,EAAOwF,GAC/B/C,EAAQ+C,IAsKIC,oBApId,SAAiCzF,GAC/BkC,EAAewD,SAAS1F,EAAMf,OAAOF,MAAO,KAC5C0D,EAAQ,kBA2IR,cAACkD,GAAD,CAAkBpI,KAAMoE,EAAcpC,GAAIsC,EAAYrB,QAvKxD,SAA2BoF,EAAarG,GACtCqC,GAAc,GACdE,EAAc,IACV8D,IACErG,EACF+C,GAAW,SAAAD,GAAO,OAAIA,EAAQkB,KAAI,SAAAiB,GAChC,OAAIA,EAAKjF,KAAOA,EACPiF,EAEF,2BAAIA,GAASoB,SAGtBjF,GAAa,CAAEC,KAAM,IAClBiC,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KACFA,EAAKgC,SACRhB,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,yMAEhDa,EAAWtB,EAAKgC,SAChBZ,EAAgBpB,EAAKiC,UAEtB3E,OAAM,YAAc,EAAX0C,KACRgB,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,gNAoJtD,cAACnB,EAAA,EAAD,CAAU/C,KAAMwE,EAAMxE,KAAMgD,iBAAkB,IAAMC,QAASzC,EAA7D,SACE,cAAC,EAAD,CAAOyC,QAASzC,EAAa0C,SAAUsB,EAAMvC,KAA7C,SACGuC,EAAMN,eAMf,IAAMoE,GAAc,CAClBxE,KAAM,GACNyE,UAAW,GACXtG,KAAM,GACNuG,gBAAiB,GACjBzE,OAAQ,GACRC,KAAM,GACN5D,MAAO,GACPqI,MAAO,GACPC,YAAa,IAEf,SAASN,GAAT,GAAkD,IAAtBpG,EAAqB,EAArBA,GAAIhC,EAAiB,EAAjBA,KAAMiD,EAAW,EAAXA,QAAW,EACrBlD,mBAAS,eAAIkE,KADQ,mBACxCO,EADwC,KACjCC,EADiC,OAEvB1E,mBAAS,eAAIuI,KAFU,mBAExC7E,EAFwC,KAElCkF,EAFkC,KA8C/C,SAASC,EAAa/H,GACpB8H,GAAQ,SAAAE,GAAK,kCAASA,GAAT,kBAAiBhI,EAAEa,OAAOoC,KAAOjD,EAAEa,OAAOF,WAEzD,SAASsH,IACPrE,EAAS,eAAIR,KAGf,OAlDAuB,qBAAU,WACG,KAAPxD,EAIJuB,GAAevB,GACZsD,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KACPsF,QAAQC,IAAIvF,GACZkF,EAAQ,CACN7E,KAAML,EAAKK,MAAQ,GACnByE,UAAW9E,EAAK8E,WAAa,GAC7BtG,KAAMwB,EAAKxB,MAAQ,GACnBuG,gBAAiB/E,EAAK+E,iBAAmB,GACzCzE,OAAQN,EAAKM,QAAU,GACvBC,KAAMP,EAAKO,MAAQ,GACnB5D,MAAOqD,EAAKrD,OAAS,GACrBqI,MAAOhF,EAAKgF,OAAS,GACrBC,YAAajF,EAAKiF,aAAe,QAGpC3H,MAAMgI,QAAQE,OAlBfN,EAAQ,eAAIL,OAmBb,CAACtG,IA6BG,eAACkH,GAAA,EAAD,CAAQlJ,KAAMA,EAAMiD,QAASA,EAASkG,kBAAgB,oBAAtD,UACL,cAACC,GAAA,EAAD,CAAapH,GAAG,oBAAhB,SACU,KAAPA,EAAW,4HAA0B,4GAExC,cAACqH,GAAA,EAAD,UACE,sBAAMrH,GAAG,eAAepB,SAjC5B,SAAsBC,GACpBA,EAAEC,kBACqB,KAAPkB,EAAawB,GAAgBG,IACtC3B,EAAIyB,GACR6B,MAAK,WACJb,EAAS,CAACzE,MAAM,EAAMiC,KAAM,UAAWiC,QAAS,2IAChDoF,YAAW,WACTrG,EAAQQ,EAAMzB,KACb,SAEJjB,OAAM,SAAAkI,GACL,IAAMxF,EAAOwF,EAAMM,SAAS9F,KAC5B,GAAIA,EAAM,CACRsF,QAAQC,IAAIvF,GACZ,IAAM+F,EAAMC,OAAOC,KAAKjG,GAAM,GAC9BgB,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAQ,IAAD,OAAMsF,EAAN,aAAc/F,EAAK+F,WAE/D/E,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,4JAgBlD,SACE,eAACyF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACRxI,MAAOiC,EAAKK,KACZrC,SAAUmH,EACV9E,KAAK,OACLxC,MAAM,4HACND,OAAO,QACP9C,QAAQ,WACRgD,WAAS,MAGb,cAACoI,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACRxI,MAAOiC,EAAK8E,UACZ9G,SAAUmH,EACV9E,KAAK,YACLxC,MAAM,oGACND,OAAO,QACP9C,QAAQ,WACRgD,WAAS,MAGb,cAACoI,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACRxI,MAAOiC,EAAKxB,KACZR,SAAUmH,EACV9E,KAAK,OACLxC,MAAM,2DACND,OAAO,QACP9C,QAAQ,WACRgD,WAAS,MAGb,cAACoI,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACRxI,MAAOiC,EAAK+E,gBACZ/G,SAAUmH,EACV9E,KAAK,kBACLxC,MAAM,0GACND,OAAO,QACP9C,QAAQ,WACRgD,WAAS,MAGb,cAACoI,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACRxI,MAAOiC,EAAKM,OACZtC,SAAUmH,EACV9E,KAAK,SACLxC,MAAM,uCACND,OAAO,QACP9C,QAAQ,WACRgD,WAAS,MAGb,cAACoI,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACRxI,MAAOiC,EAAKO,KACZvC,SAAUmH,EACV9E,KAAK,OACLxC,MAAM,iCACND,OAAO,QACP9C,QAAQ,WACRgD,WAAS,MAGb,cAACoI,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACRxI,MAAOiC,EAAKrD,MACZqB,SAAUmH,EACV9E,KAAK,QACL7B,KAAK,QACLX,MAAM,QACND,OAAO,QACP9C,QAAQ,WACRgD,WAAS,MAGb,cAACoI,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACRxI,MAAOiC,EAAKgF,MACZhH,SAAUmH,EACV9E,KAAK,QACLxC,MAAM,6CACNW,KAAK,MACLZ,OAAO,QACP9C,QAAQ,WACRgD,WAAS,MAGb,cAACoI,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAf,SACE,cAAC1I,EAAA,EAAD,CACEI,MAAOiC,EAAKiF,YACZjH,SAAUmH,EACV9E,KAAK,cACLxC,MAAM,oIACN2I,KAAM,EACNC,WAAS,EACT7I,OAAO,QACP9C,QAAQ,WACRgD,WAAS,aAMnB,eAAC4I,GAAA,EAAD,WACE,cAACrH,EAAA,EAAD,CAAQvD,QAAS0D,EAAS/B,MAAM,UAAhC,8DAGA,cAAC4B,EAAA,EAAD,CAAQb,KAAK,SAASmI,KAAK,eAAelJ,MAAM,UAAhD,SACU,KAAPc,EAAY,yDAAc,wDAI/B,cAACe,EAAA,EAAD,CAAU/C,KAAMwE,EAAMxE,KAAMgD,iBAAkB,IAAMC,QAAS6F,EAA7D,SACE,cAAC,EAAD,CAAO7F,QAAS6F,EAAkB5F,SAAUsB,EAAMvC,KAAlD,SACGuC,EAAMN,e,0FE9Zf,SAASmG,GAAT,GAA8C,IAA1B5K,EAAyB,EAAzBA,SAAU+B,EAAe,EAAfA,MAAO8I,EAAQ,EAARA,MACnC,OACE,qBAAKC,KAAK,WAAWC,OAAQhJ,IAAU8I,EAAvC,SACG9I,IAAU8I,GACT,cAAC5J,EAAA,EAAD,CAAKzB,UAAU,MAAMwL,WAAY,EAAjC,SACGhL,MAOX,SAASiL,KACP,OAAO,qBAAKrM,UAAWC,KAAOoM,QAAvB,SACL,cAACzJ,EAAA,EAAD,oEAIJ,IAAM0J,GAAgB,CACpB,KAAS,GACT,UAAc,GACd,UAAc,GACd,OAAW,GACX,KAAS,GACT,MAAU,GACV,MAAU,GACV,YAAgB,GAChB,gBAAoB,GACpB,gBAAoB,GACpB,QAAY,GACZ,OAAW,GACX,gBAAoB,GACpB,mBAAuB,GACvB,QAAY,GACZ,WAAa,GAET1G,GAAe,CACnBjE,MAAM,EACNiC,KAAM,OACNiC,QAAS,IAEJ,SAAS0G,KAAoB,IAAD,EACzB5I,EAAO6I,cAAP7I,GADyB,EAGPjC,mBAAS,eAAIkE,KAHN,mBAG1BO,EAH0B,KAGnBC,EAHmB,KAIjC,SAASqE,IACPrE,EAAS,eAAIR,KALkB,MAQXlE,mBAAS,GARE,mBAQ1B+K,EAR0B,KAQrBC,EARqB,WAYLhL,mBAAS,MAZJ,mBAY1BiL,EAZ0B,KAYlBC,EAZkB,KAajC,SAASC,EAAcrK,GACrBkI,QAAQC,IAAInI,EAAEa,OAAOoC,KAAMjD,EAAEa,OAAOyJ,SACpCF,GAAU,SAAAxH,GACR,IAAI2H,EAAMvK,EAAEa,OAAOF,MACbsC,EAAOjD,EAAEa,OAAOoC,KAItB,MAHa,cAATA,IACFsH,EAAMvK,EAAEa,OAAOyJ,SAEV,2BAAI1H,GAAX,kBAAkBK,EAAOsH,OAG7B5F,qBAAU,WACRjC,GAAevB,GACZsD,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KACH4H,EAAS,GACb5B,OAAOC,KAAKjG,GAAM6H,SAAQ,SAAAC,GAAC,aAAIF,EAAOE,GAAP,UAAY9H,EAAK8H,UAAjB,QAAuBZ,GAAcY,MACpEN,EAAUI,MAEXtK,OAAM,WACL0D,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,4OAEjD,CAAClC,IAwBJ,IA1DiC,EAiEHjC,mBAAS,IAjEN,mBAiE1ByL,EAjE0B,KAiEjBC,EAjEiB,KA6EjC,OAVAjG,qBAAU,YC5IL,YAAgE,IAAtCkG,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,OAAQvI,EAAQ,EAARA,KAC1D,OAAOlG,EAAWK,IAAX,qBAA6BkO,EAA7B,kBAAwD,CAC3DpI,OAAQ,CACJD,OACAsI,WACAC,aDwIRC,CAAe,CAAEH,UAAW1J,IACzBsD,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KACPgI,EAAWhI,EAAKgC,YAEjB1E,OAAM,SAAAkI,GACLxE,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,4OAEjD,CAAClC,IAEG,qCACL,cAACwE,GAAA,EAAD,CAAQtF,MAAM,UAAUmB,SAAS,SAAShE,UAAWC,KAAOmI,KAA5D,SACE,eAACC,GAAA,EAAD,WACE,cAACpE,EAAA,EAAD,CAAYI,KAAK,QAAQxB,MAAM,UAAUqB,aAAW,2BAAOlE,UAAWC,KAAOqI,WAA7E,SACE,cAAC,KAAD,MAEF,cAAC1F,EAAA,EAAD,CAAY1C,QAAQ,KAAKF,UAAWC,KAAOsI,MAA3C,0BACGoE,QADH,IACGA,OADH,EACGA,EAAQlH,YADX,QACmB,wDAEnB,cAAChB,EAAA,EAAD,CAAQvD,QAlDd,WACEiF,EAAM,0PAiD+BtD,MAAM,UAAU3C,QAAQ,YAAzD,mEAIJ,eAACkC,EAAA,EAAD,CAAOpC,UAAWC,KAAOuI,KAAzB,UACE,eAACiF,GAAA,EAAD,CAAMtK,MAAOsJ,EAAKrJ,SAlFtB,SAAkBZ,EAAGkL,GACnBhB,EAAOgB,IAiFL,UACE,cAACC,GAAA,EAAD,CAAK1K,MAAM,iEACX,cAAC0K,GAAA,EAAD,CAAK1K,MAAM,2HAGV0J,EAEC,qCACF,cAACX,GAAD,CAAU7I,MAAOsJ,EAAKR,MAAO,EAA7B,SACE,sBAAM1J,SA5Dd,SAAsBC,GACpBA,EAAEC,iBACF6C,GAAa3B,EAAIgJ,GACd1F,MAAK,YAAc,EAAX7B,KACPgB,EAAS,CAACzE,MAAM,EAAMiC,KAAM,UAAWiC,QAAS,mGAEjDnD,OAAM,SAAAkI,GACL,IAAMxF,EAAOwF,EAAMM,SAAS9F,KAC5B,GAAIA,EAAM,CACRsF,QAAQC,IAAIvF,GACZ,IAAM+F,EAAMC,OAAOC,KAAKjG,GAAM,GAC9BgB,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAQ,IAAD,OAAMsF,EAAN,aAAc/F,EAAK+F,WAE/D/E,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,4JA+C9C,SACE,eAACyF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,eAACF,GAAA,EAAD,CAAMC,WAAS,EAAC3C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAGF,QAAS,EAAGoC,aAAa,aAA7D,UACE,cAACtC,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAf,SACE,cAAC7I,EAAA,EAAD,CAAY1C,QAAQ,KAAKU,UAAU,KAAnC,6HAEF,cAAC0K,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAf,SACE,cAAC1I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,4HACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,OACLtC,MAAOwJ,EAAOlH,KACdrC,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,oGACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,YACLtC,MAAOwJ,EAAOzC,UACd9G,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,0GACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,YACLtC,MAAOwJ,EAAOkB,UACdzK,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,uCACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,SACLtC,MAAOwJ,EAAOjH,OACdtC,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,iCACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,OACLtC,MAAOwJ,EAAOhH,KACdvC,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR/H,KAAK,QACLX,MAAM,QACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,QACLtC,MAAOwJ,EAAO5K,MACdqB,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR/H,KAAK,MACLX,MAAM,6CACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,QACLtC,MAAOwJ,EAAOvC,MACdhH,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAf,SACE,cAAC1I,EAAA,EAAD,CACEE,MAAM,oIACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,cACLoG,WAAS,EACTD,KAAM,EACNzI,MAAOwJ,EAAOtC,YACdjH,SAAUyJ,SAIhB,eAACvB,GAAA,EAAD,CAAMC,WAAS,EAAC3C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAGF,QAAS,EAAGoC,aAAa,aAA7D,UACE,cAACtC,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAf,SACE,cAAC7I,EAAA,EAAD,CAAY1C,QAAQ,KAAKU,UAAU,KAAnC,uHAEF,cAAC0K,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAf,SACE,cAAC1I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,iHACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,kBACLtC,MAAOwJ,EAAOmB,gBACd1K,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,2DACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,kBACLtC,MAAOwJ,EAAOxC,gBACd/G,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,wCACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,UACLtC,MAAOwJ,EAAOoB,QACd3K,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,2EACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,SACLtC,MAAOwJ,EAAOqB,OACd5K,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,kIACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,kBACLtC,MAAOwJ,EAAOsB,gBACd7K,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,oGACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,qBACLtC,MAAOwJ,EAAOuB,mBACd9K,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC3I,EAAA,EAAD,CACE4I,UAAQ,EACR1I,MAAM,oGACN/C,QAAQ,WACRgD,WAAS,EACTF,OAAO,QACPyC,KAAK,UACLtC,MAAOwJ,EAAOwB,QACd/K,SAAUyJ,MAGd,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAf,SACE,cAAC2C,GAAA,EAAD,CACEC,QAAS,cAACC,GAAA,EAAD,CAAQzL,MAAM,YACvBI,MAAM,oHACNsL,eAAe,QACfvL,OAAO,QACPyC,KAAK,YACLtC,MAAOwJ,EAAO6B,UACdpL,SAAUyJ,SAIhB,cAACvB,GAAA,EAAD,CAAM1C,MAAI,EAAC6C,GAAI,GAAIzL,UAAWC,KAAOwO,eAArC,SACE,cAAChK,EAAA,EAAD,CAAQb,KAAK,SAAS1D,QAAQ,YAAY2C,MAAM,UAAU6L,KAAK,QAA/D,6EAKR,cAAC1C,GAAD,CAAU7I,MAAOsJ,EAAKR,MAAO,EAA7B,SACE,cAAC,KAAD,CACE0C,MAAM,uKACNC,QAjQM,CACd,CAAED,MAAO,2BAAQE,MAAO,QACxB,CAAEF,MAAO,qBAAOE,MAAO,gBACvB,CAAEF,MAAO,gEAAeE,MAAO,kBAC/B,CAAEF,MAAO,uCAAUE,MAAO,aA8PlBzJ,KAAM+H,EACN2B,aAAc,CACZC,WAAY,CACVC,mBAAoB,oCAEtBC,QAAS,CACPC,cAAe,iFAEjBC,OAAQ,CACNC,QAAS,oDAEXC,KAAM,CACJC,uBAAwB,gJACxBC,UAAW,CACTC,cAAe,0CAIrBC,SAAU,CACRC,SAAU,SAAAC,GACR,OEzZkBtC,EFyZO1J,EEzZIyB,EFyZAuK,EExZlC7Q,EAAWuG,KAAX,qBAA8BgI,EAA9B,kBAAyDjI,IFyZjD6B,MAAK,YAAc,EAAX7B,KACPgI,EAAW,GAAD,oBAAKD,GAAL,CAAcwC,KACxBvJ,EAAS,CAACzE,MAAM,EAAMiC,KAAM,UAAWiC,QAAS,yGAEjDnD,OAAM,SAAAkI,GACLxE,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,4ME/Z3D,IAA2BwH,EAAWjI,GFka/BwK,YAAa,SAACD,EAASE,GAErB,OADAnF,QAAQC,IAAIkF,EAASF,GGna9B,SAA0BtC,EAAW1J,EAAIyB,GAC5C,OAAOtG,EAAWyG,MAAX,qBAA+B8H,EAA/B,yBAAyD1J,EAAzD,KAAgEyB,GHmapD0K,CAAiBnM,EAAIkM,EAAQlM,GAAIgM,GACrC1I,MAAK,YAAc,EAAX7B,KACPgI,EAAWD,EAAQxF,KAAI,SAAAoI,GACrB,OAAIA,EAAEpM,KAAOkM,EAAQlM,GACZoM,EAEFJ,MAETvJ,EAAS,CAACzE,MAAM,EAAMiC,KAAM,UAAWiC,QAAS,yGAEjDnD,OAAM,SAAAkI,GACLxE,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,6MAGpDmK,YAAa,SAAAH,GACX,OInbT,SAA2BxC,EAAW1J,GACzC,OAAO7E,EAAWiI,OAAX,qBAAgCsG,EAAhC,yBAA0D1J,EAA1D,MJkbYsM,CAAkBtM,EAAIkM,EAAQlM,IAClCsD,MAAK,YAAc,EAAX7B,KACPgI,EAAWD,EAAQxG,QAAO,SAAAoJ,GAAC,OAAIA,EAAEpM,KAAOkM,EAAQlM,OAChDyC,EAAS,CAACzE,MAAM,EAAMiC,KAAM,UAAWiC,QAAS,6FAEjDnD,OAAM,SAAAkI,GACLxE,EAAS,CAACzE,MAAM,EAAMiC,KAAM,QAASiC,QAAS,yMA/Q1D,cAACwG,GAAD,OAwRJ,cAAC3H,EAAA,EAAD,CAAU/C,KAAMwE,EAAMxE,KAAMgD,iBAAkB,IAAMC,QAAS6F,EAA7D,SACE,cAAC,EAAD,CAAO7F,QAAS6F,EAAkB5F,SAAUsB,EAAMvC,KAAlD,SACGuC,EAAMN,e,WKvbTqK,GAAmB,eAgEVC,OA9Df,WAAgB,IAAD,EACWzO,mBAAS,MADpB,mBACN0O,EADM,KACAC,EADA,KASb,SAAS5O,EAAT,GACE,OCzBG,YAA2C,IAApBM,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,SACjC,OAAOnD,EAAWuG,KAAK,UAAW,CAAEtD,QAAOE,aDwBpCqO,CAAY,CAACvO,MADY,EAAlBA,MACaE,SADK,EAAXA,WAElBgF,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KACL,IAAIA,EAAKmL,OAGL,MAAMnL,EAFN3F,aAAa+Q,QAAQN,GAAkB9K,EAAKmL,WAKnDtJ,KAAK/H,GACL+H,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KACLiL,EAAQjL,MAGhB,SAAStF,IACPL,aAAagR,WAAWP,IACxBG,EAAQ,MAvBVlJ,qBAAU,WACRjI,IACG+H,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KACPiL,EAAQjL,MAET1C,MAAMgI,QAAQE,SACjB,IAmBF,IAAM8F,EAAU,CACdN,OACA3O,QACA3B,UAGEuP,EAAO,KAoBX,OAdEA,EALGe,EAMD,cAACjP,EAAD,CAAerB,OAAQA,EAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6Q,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC9K,GAAD,MAEF,cAAC,IAAD,CAAO8K,KAAK,eAAZ,SACE,cAACrE,GAAD,WAVN,cAACzH,EAAD,CAAWrD,MAAOA,IAkBpB,cAAC,IAAD,UACE,cAAC7C,EAAYiS,SAAb,CAAsB1N,MAAOuN,EAA7B,SACGrB,OE7DMyB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/J,MAAK,YAAkD,IAA/CgK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.740889d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"PageCustomerEdit_Root__3WWWJ\",\"MenuButton\":\"PageCustomerEdit_MenuButton__yDH8k\",\"Title\":\"PageCustomerEdit_Title__3cZLZ\",\"Page\":\"PageCustomerEdit_Page__3vHaW\",\"SaveButtonWrap\":\"PageCustomerEdit_SaveButtonWrap__11AFs\",\"Loading\":\"PageCustomerEdit_Loading__getqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"PageCustomerList_Root__1SWow\",\"MenuButton\":\"PageCustomerList_MenuButton__2qrYr\",\"Title\":\"PageCustomerList_Title__3WLiF\",\"Page\":\"PageCustomerList_Page__CSqCb\",\"Filter\":\"PageCustomerList_Filter__3TF8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Sidebar_Drawer__1QdR4\",\"Drawer__paper\":\"Sidebar_Drawer__paper__23xCX\",\"Drawer__header\":\"Sidebar_Drawer__header__1scIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DefaultLayout\":\"DefaultLayout_DefaultLayout__3cKpc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageLogin\":\"PageLogin_PageLogin__29r0K\"};","import { createContext } from 'react'\n\n\nexport const UserContext = createContext(null)\n","import axios from 'axios'\n\nexport const httpClient = axios.create({\n    baseURL: '/api/v1'\n})\n\nhttpClient.interceptors.request.use(function (config) {\n    const token = localStorage.getItem('token/access');\n    config.headers.Authorization =  token ? `Bearer ${token}` : '';\n    return config;\n});\n","import { httpClient } from '../httpClient';\n\nexport function getMe() {\n    return httpClient.get('/users/me')\n}\n","import {\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport MUIAssignment from '@material-ui/icons/Assignment'\nimport MUIExitToApp from '@material-ui/icons/ExitToApp'\n\nimport styles from './Sidebar.module.css'\n\nexport function Sidebar({ logout }) {\n  return (\n    <Drawer\n      className={styles.Drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: styles.Drawer__paper\n      }}\n      anchor=\"left\"\n    >\n      <div className={styles.Drawer__header} />\n      <Divider />\n      <List>\n        <ListItem button component={Link} to='/'>\n          <ListItemIcon>\n            <MUIAssignment />\n          </ListItemIcon>\n          <ListItemText primary='Клиенты' />\n        </ListItem>\n        <ListItem button onClick={logout}>\n          <ListItemIcon>\n            <MUIExitToApp />\n          </ListItemIcon>\n          <ListItemText primary='Выход' />\n        </ListItem>\n      </List>\n    </Drawer>\n  )\n}\n","import { Sidebar } from '../../components/Sidebar'\n\nimport styles from './DefaultLayout.module.css'\n\nexport function DefaultLayout({ logout, children }) {\n    return <div className={styles.DefaultLayout}>\n        <Sidebar logout={logout} />\n        {children}\n    </div>\n}\n","import MuiAlert from '@material-ui/lab/Alert'\n\nexport function Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n","import { useState } from 'react'\nimport {\n    Paper,\n    Box,\n    Typography,\n    Button,\n    TextField,\n    Snackbar,\n    FormControl,\n    OutlinedInput,\n    InputLabel,\n    InputAdornment,\n    IconButton,\n} from '@material-ui/core'\nimport { Alert } from '../Alert'\n\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\n\nexport function LoginForm({ login }) {\n    const [open, setOpen] = useState(false)\n    const [showPassword, setShowPassword] = useState(false)\n    const [email, setEmail] = useState('testkit1301@mail.ru')\n    const [password, setPassword] = useState('class456')\n    function handleSubmit(e){\n        e.preventDefault()\n        login({email, password}).catch(err => {\n            setOpen(true)\n        })\n    }\n    function handleClose() {\n        setOpen(false)\n    }\n    function handleClickShowPassword() {\n        setShowPassword(!showPassword)\n    }\n    function handleMouseDownPassword(event) {\n        event.preventDefault()\n    };\n\n    return <Paper elevation={3}>\n        <Box padding={3}>\n            <form onSubmit={handleSubmit}>\n                <Typography color=\"textPrimary\" variant=\"h6\" component=\"h1\">\n                    Авторизация\n                </Typography>\n                <Box marginTop={1}>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Box>\n                <Box marginTop={1}>\n                    <FormControl variant=\"outlined\" margin=\"dense\">\n                        <InputLabel shrink htmlFor=\"outlined-adornment-password\">Пароль</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-password\"\n                            type={showPassword ? 'text' : 'password'}\n                            value={password}\n                            margin=\"dense\"\n                            fullWidth\n                            onChange={e => setPassword(e.bubbles.value)}\n                            endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                                >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                            }\n                            labelWidth={70}\n                        />\n                    </FormControl>\n                </Box>\n                <Box marginTop={2} display=\"flex\" justifyContent=\"flex-end\">\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                        Войти\n                    </Button>\n                </Box>\n            </form>\n        </Box>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n                Ошибка авторизации\n            </Alert>\n        </Snackbar>\n    </Paper>\n}\n","import { LoginForm } from '../../components/LoginForm'\n\nimport styles from './PageLogin.module.css'\n\nexport function PageLogin({ login }) {\n    return <div className={styles.PageLogin}>\n        <LoginForm login={login} />\n    </div>\n}\n","import { httpClient } from '../httpClient'\n\nexport function getCompanies({ page }) {\n    return httpClient.get('/companies/', { params: { page } })\n}\n","import { httpClient } from '../httpClient'\n\nexport function getCompanyById(id) {\n    return httpClient.get(`/companies/${id}/`)\n}\n","import { httpClient } from '../httpClient'\n\nexport function createCompany(id, data) {\n    return httpClient.post(`/companies/${id}/`, data)\n}\n","import { httpClient } from '../httpClient'\n\nexport function patchCompany(id, data) {\n    return httpClient.patch(`/companies/${id}/`, data)\n}\n","import { useState, useMemo, useEffect } from 'react'\n\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Button,\n  Typography,\n  Paper,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableFooter,\n  TablePagination,\n  TableHead,\n  TextField,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Snackbar,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from '@material-ui/core'\nimport MUIMenu from '@material-ui/icons/Menu'\nimport MUIEdit from '@material-ui/icons/Edit'\nimport MUIDelete from '@material-ui/icons/Delete'\nimport MUIReplay from '@material-ui/icons/Replay'\n\nimport { Link } from 'react-router-dom'\n\nimport { Alert } from '../../components/Alert'\n\nimport { getCompanies } from '../../core/api/companies/getCompanies'\nimport { deleteCompany } from '../../core/api/companies/deleteCompany'\nimport { getCompanyById } from '../../core/api/companies/getCompanyById'\nimport { createCompany } from '../../core/api/companies/createCompany'\nimport { patchCompany } from '../../core/api/companies/patchCompany'\n\nimport styles from './PageCustomerList.module.css'\n\nconst defaultFilter = {\n  name: '',\n  type: '',\n  region: '',\n  city: '',\n}\nconst defaultAlert = {\n  open: false,\n  type: 'info',\n  message: '',\n}\nexport function PageCustomerList() {\n  const [isDialogOpen, setDialogOpen] = useState(false)\n  const [editItemId, setEditItemId] = useState('')\n  const [alert, setAlert] = useState({...defaultAlert})\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [totalClients, setTotalClients] = useState(0)\n  const [clients, setClients] = useState([])\n  const [filter, setFilter] = useState({...defaultFilter})\n  const [page, setPage] = useState(0)\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  function handleEditItem(id) {\n    return () => {\n      setEditItemId(id)\n      setDialogOpen(true)\n    }\n  }\n  function handleCloseDialog(updatedData, id) {\n    setDialogOpen(false)\n    setEditItemId('')\n    if (updatedData) {\n      if (id) {\n        setClients(clients => clients.map(item => {\n          if (item.id !== id) {\n            return item\n          }\n          return {...item, ...updatedData}\n        }))\n      } else {\n        getCompanies({ page: 1 }) // Just because API isn't support filtration\n          .then(({ data }) => {\n            if (!data.results) {\n              setAlert({open: true, type: 'error', message: 'Не удалось загрузить список компаний'})\n            }\n            setClients(data.results)\n            setTotalClients(data.count)\n          })\n          .catch(({ data }) => {\n            setAlert({open: true, type: 'error', message: 'Не удалось загрузить список компаний'})\n          })\n      }\n    }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n  function handleClose() {\n    setAlert({...defaultAlert})\n  }\n  function handleDelete(id) {\n    return () => {\n      deleteCompany(id)\n        .then(({ data }) => {\n          setClients([...clients].filter(c => c.id !== id))\n          setAlert({open: true, type: 'success', message: 'Клиент успешно удалён'})\n        })\n        .catch(() => {\n          setAlert({open: true, type: 'error', message: 'Не удалось удалить клиента'})\n        })\n    }\n  }\n  useEffect(() => {\n    getCompanies({ page: 1 }) // Just because API isn't support filtration\n      .then(({ data }) => {\n        if (!data.results) {\n          setAlert({open: true, type: 'error', message: 'Не удалось загрузить список компаний'})\n        }\n        setClients(data.results)\n        setTotalClients(data.count)\n      })\n      .catch(({ data }) => {\n        setAlert({open: true, type: 'error', message: 'Не удалось загрузить список компаний'})\n      })\n  }, [])\n  const regions = useMemo(() => {\n    return Array.from(new Set(clients.map(c => (c.region ?? '').trim()))).filter(r => r !== '')\n  }, [clients])\n  const types = useMemo(() => {\n    return Array.from(new Set(clients.map(c => (c.type ?? '').trim()))).filter(r => r !== '')\n  }, [clients])\n  const filteredClients = useMemo(() => {\n    let result = [...clients]\n    if (filter.name !== '') {\n      result = result.filter(c => c.name.includes(filter.name))\n    }\n    if (filter.type !== '') {\n      result = result.filter(c => c.type === filter.type)\n    }\n    if (filter.region !== '') {\n      result = result.filter(c => c.region === filter.region)\n    }\n    if (filter.city !== '') {\n      result = result.filter(c => c.city.includes(filter.city))\n    }\n    return result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  }, [clients, filter, page, rowsPerPage])\n\n  return <>\n    <AppBar color='inherit' position=\"static\" className={styles.Root}>\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"меню\" className={styles.MenuButton}>\n          <MUIMenu />\n        </IconButton>\n        <Typography variant=\"h6\" className={styles.Title}>\n          Клиенты\n        </Typography>\n        <Button onClick={handleEditItem('')} color=\"primary\" variant=\"contained\">Добавить</Button>\n      </Toolbar>\n    </AppBar>\n\n    <Paper className={styles.Page}>\n      <div className={styles.Filter}>\n        <TextField variant='outlined' fullWidth label='Наименование компании' value={filter.name} onChange={e => setFilter({...filter, name: e.target.value})} />\n        <FormControl variant='outlined' fullWidth>\n          <InputLabel>Тип юр.лица</InputLabel>\n          <Select value={filter.type} onChange={e => setFilter({...filter, type: e.target.value})}>\n            <MenuItem value={''}>Не указано</MenuItem>\n            {types.map(item => (\n              <MenuItem key={item} value={item}>{item}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl variant='outlined' fullWidth>\n          <InputLabel>Регион</InputLabel>\n          <Select variant='outlined' value={filter.region} onChange={e => setFilter({...filter, region: e.target.value})}>\n            <MenuItem value={''}>Не указано</MenuItem>\n            {regions.map(item => (\n              <MenuItem key={item} value={item}>{item}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <TextField variant='outlined' fullWidth label='Город' value={filter.city} onChange={e => setFilter({...filter, city: e.target.value})} />\n        <IconButton onClick={() => setFilter({...defaultFilter})}>\n          <MUIReplay />\n        </IconButton>\n      </div>\n\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Наименование компании</TableCell>\n              <TableCell>Тип юр.лица</TableCell>\n              <TableCell>Регион</TableCell>\n              <TableCell>Город</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredClients.map(item => (\n              <TableRow key={item.id}>\n                <TableCell width='30%'>{item.name}</TableCell>\n                <TableCell width='90'>{item.type || 'N/A'}</TableCell>\n                <TableCell>{item.region || 'N/A'}</TableCell>\n                <TableCell>{item.city || 'N/A'}</TableCell>\n                <TableCell width='100' align=\"right\">\n                  <IconButton component={Link} to={`/company/${item.id}`}><MUIEdit/></IconButton>\n                  <IconButton onClick={handleDelete(item.id)}><MUIDelete/></IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'Все', value: -1 }]}\n                count={totalClients}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'Записей на странице' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n\n    </Paper>\n\n    <ClientEditDialog open={isDialogOpen} id={editItemId} onClose={handleCloseDialog} />\n\n    <Snackbar open={alert.open} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity={alert.type}>\n        {alert.message}\n      </Alert>\n    </Snackbar>\n  </>\n}\n\nconst defaultData = {\n  name: '',\n  shortname: '',\n  type: '',\n  registered_type: '',\n  region: '',\n  city: '',\n  email: '',\n  phone: '',\n  description: '',\n}\nfunction ClientEditDialog({ id, open, onClose }) {\n  const [alert, setAlert] = useState({...defaultAlert})\n  const [data, setData] = useState({...defaultData})\n  useEffect(() => {\n    if (id === '') {\n      setData({...defaultData})\n      return\n    }\n    getCompanyById(id)\n      .then(({ data }) => {\n        console.log(data)\n        setData({\n          name: data.name || '',\n          shortname: data.shortname || '',\n          type: data.type || '',\n          registered_type: data.registered_type || '',\n          region: data.region || '',\n          city: data.city || '',\n          email: data.email || '',\n          phone: data.phone || '',\n          description: data.description || '',\n        })\n      })\n      .catch(console.error)\n  }, [id])\n  function handleSubmit(e) {\n    e.preventDefault()\n    const action = (id === '') ? createCompany : patchCompany\n    action(id, data)\n      .then(() => {\n        setAlert({open: true, type: 'success', message: 'Данные успешно сохранены'})\n        setTimeout(() => {\n          onClose(data, id)\n        }, 1500)\n      })\n      .catch(error => {\n        const data = error.response.data\n        if (data) {\n          console.log(data)\n          const key = Object.keys(data)[0]\n          setAlert({open: true, type: 'error', message: `[${key}] ${data[key]}`})\n        } else {\n          setAlert({open: true, type: 'error', message: 'Не удалось сохранить данные'})\n        }\n      })\n  }\n  function handleChange(e) {\n    setData(state => ({...state, [e.target.name]: e.target.value}))\n  }\n  function handleCloseAlert() {\n    setAlert({...defaultAlert})\n  }\n\n  return <Dialog open={open} onClose={onClose} aria-labelledby=\"edit-dialog-title\">\n    <DialogTitle id=\"edit-dialog-title\">\n      {id !== ''? 'Редактирование клента' : 'Добавление клиента'}\n    </DialogTitle>\n    <DialogContent>\n      <form id='customerForm' onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              required\n              value={data.name}\n              onChange={handleChange}\n              name='name'\n              label='Наименование компании'\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              required\n              value={data.shortname}\n              onChange={handleChange}\n              name='shortname'\n              label='Короткое название'\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              required\n              value={data.type}\n              onChange={handleChange}\n              name='type'\n              label='Тип юр.лица'\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              required\n              value={data.registered_type}\n              onChange={handleChange}\n              name='registered_type'\n              label='Сфера деятельности'\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              required\n              value={data.region}\n              onChange={handleChange}\n              name='region'\n              label='Регион'\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              required\n              value={data.city}\n              onChange={handleChange}\n              name='city'\n              label='Город'\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              required\n              value={data.email}\n              onChange={handleChange}\n              name='email'\n              type='email'\n              label='Email'\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              required\n              value={data.phone}\n              onChange={handleChange}\n              name='phone'\n              label='Телефон'\n              type='tel'\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              value={data.description}\n              onChange={handleChange}\n              name='description'\n              label='Дополнительно (описание)'\n              rows={3}\n              multiline\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </form>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={onClose} color=\"primary\">\n        Отменить\n      </Button>\n      <Button type='submit' form='customerForm' color=\"primary\">\n        {id !== '' ? 'Сохранить' : 'Добавить'}\n      </Button>\n    </DialogActions>\n\n    <Snackbar open={alert.open} autoHideDuration={6000} onClose={handleCloseAlert}>\n      <Alert onClose={handleCloseAlert} severity={alert.type}>\n        {alert.message}\n      </Alert>\n    </Snackbar>\n  </Dialog>\n}\n","import { httpClient } from '../httpClient'\n\nexport function deleteCompany({ id }) {\n    return httpClient.delete('/companies/' + id)\n}\n","import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Button,\n  Typography,\n  Paper,\n  Grid,\n  Tabs,\n  Tab,\n  Box,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Snackbar,\n} from '@material-ui/core'\n\nimport MUIMenu from '@material-ui/icons/Menu'\nimport MaterialTable from 'material-table'\n\nimport { Alert } from '../../components/Alert'\n\nimport { getCompanyById } from '../../core/api/companies/getCompanyById'\nimport { patchCompany } from '../../core/api/companies/patchCompany'\nimport { getBankDetails } from '../../core/api/companies/bank-details/getBankDetails'\nimport { createBankDetails } from '../../core/api/companies/bank-details/createBankDetails'\nimport { deleteBankDetails } from '../../core/api/companies/bank-details/deleteBankDetails'\nimport { patchBankDetails } from '../../core/api/companies/bank-details/patchBankDetails'\n\nimport styles from './PageCustomerEdit.module.css'\n\nfunction TabPanel({ children, value, index}) {\n  return (\n    <div role='tabpanel' hidden={value !== index}>\n      {value === index && (\n        <Box component='div' paddingTop={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction Loading() {\n  return <div className={styles.Loading}>\n    <Typography>Загрузка...</Typography>\n  </div>\n}\n\nconst defaultValues = {\n  'name' : '',\n  'shortname' : '',\n  'workscope' : '',\n  'region' : '',\n  'city' : '',\n  'email' : '',\n  'phone' : '',\n  'description' : '',\n  'registered_name' : '',\n  'registered_type' : '',\n  'bin_iin' : '',\n  'leader' : '',\n  'leader_position' : '',\n  'registered_address' : '',\n  'address' : '',\n  'tax_payer': false,\n}\nconst defaultAlert = {\n  open: false,\n  type: 'info',\n  message: '',\n}\nexport function PageCustomerEdit() {\n  const { id } = useParams()\n\n  const [alert, setAlert] = useState({...defaultAlert})\n  function handleCloseAlert() {\n    setAlert({...defaultAlert})\n  }\n\n  const [tab, setTab] = useState(0)\n  function onChange(e, idx) {\n    setTab(idx)\n  }\n  const [values, setValues] = useState(null)\n  function onChangeField(e) {\n    console.log(e.target.name, e.target.checked)\n    setValues(data => {\n      let val = e.target.value\n      const name = e.target.name\n      if (name === 'tax_payer') {\n        val = e.target.checked\n      }\n      return {...data, [name]: val}\n    })\n  }\n  useEffect(() => {\n    getCompanyById(id)\n      .then(({ data }) => {\n        let merged = {}\n        Object.keys(data).forEach(k => merged[k] = data[k] ?? defaultValues[k])\n        setValues(merged)\n      })\n      .catch(() => {\n        setAlert({open: true, type: 'error', message: 'Ошибка. Попробуйте перезагрузить страницу'})\n      })\n  }, [id])\n\n  function addButtonClick() {\n    alert('Так ведь мы редактируем вроде как. Что \"Добавить\"?')\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    patchCompany(id, values)\n      .then(({ data }) => {\n        setAlert({open: true, type: 'success', message: 'Данные сохранены'})\n      })\n      .catch(error => {\n        const data = error.response.data\n        if (data) {\n          console.log(data)\n          const key = Object.keys(data)[0]\n          setAlert({open: true, type: 'error', message: `[${key}] ${data[key]}`})\n        } else {\n          setAlert({open: true, type: 'error', message: 'Не удалось сохранить данные'})\n        }\n      })\n  }\n\n  const columns = [\n    { title: 'Банк', field: 'bank' },\n    { title: 'БИК', field: 'bank_id_code' },\n    { title: 'Номер счёта', field: 'account_number' },\n    { title: 'Валюта', field: 'currency' },\n  ]\n\n  const [details, setDetails] = useState([])\n\n  useEffect(() => {\n    getBankDetails({ companyId: id })\n      .then(({ data }) => {\n        setDetails(data.results)\n      })\n      .catch(error => {\n        setAlert({open: true, type: 'error', message: 'Не удалось загрузить банковские реквизиты'})\n      })\n  }, [id])\n\n  return <>\n    <AppBar color='inherit' position=\"static\" className={styles.Root}>\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"меню\" className={styles.MenuButton}>\n          <MUIMenu />\n        </IconButton>\n        <Typography variant=\"h6\" className={styles.Title}>\n          {values?.name ?? 'Загрузка...'}\n        </Typography>\n        <Button onClick={addButtonClick} color=\"primary\" variant=\"contained\">Добавить</Button>\n      </Toolbar>\n    </AppBar>\n\n    <Paper className={styles.Page}>\n      <Tabs value={tab} onChange={onChange}>\n        <Tab label='Информация' />\n        <Tab label='Банковские реквизиты' />\n      </Tabs>\n\n      {(!values) ? (\n        <Loading />\n      ) : <>\n        <TabPanel value={tab} index={0}>\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={6} >\n              <Grid container item xs={12} md={6} spacing={2} alignContent='flex-start'>\n                <Grid item xs={12}>\n                  <Typography variant='h6' component='h2'>Основная информация</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    label='Наименование компании'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='name'\n                    value={values.name}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Короткое название'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='shortname'\n                    value={values.shortname}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Сфера деятельности'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='workscope'\n                    value={values.workscope}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Регион'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='region'\n                    value={values.region}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Город'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='city'\n                    value={values.city}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    type='email'\n                    label='Email'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='email'\n                    value={values.email}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    type='tel'\n                    label='Телефон'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='phone'\n                    value={values.phone}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    label='Дополнительно (описание)'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='description'\n                    multiline\n                    rows={3}\n                    value={values.description}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n              </Grid>\n              <Grid container item xs={12} md={6} spacing={2} alignContent='flex-start'>\n                <Grid item xs={12}>\n                  <Typography variant='h6' component='h2'>Реквизиты компании</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    label='Наименование юр.лица'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='registered_name'\n                    value={values.registered_name}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Тип юр.лица'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='registered_type'\n                    value={values.registered_type}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='БИН/ИИН'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='bin_iin'\n                    value={values.bin_iin}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Руководитель'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='leader'\n                    value={values.leader}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Должность руководителя'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='leader_position'\n                    value={values.leader_position}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Юридический адрес'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='registered_address'\n                    value={values.registered_address}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    required\n                    label='Фактический адрес'\n                    variant='outlined'\n                    fullWidth\n                    margin='dense'\n                    name='address'\n                    value={values.address}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={<Switch color='primary' />}\n                    label='Плательщик НДС (нет/да)'\n                    labelPlacement='start'\n                    margin='dense'\n                    name='tax_payer'\n                    value={values.tax_payer}\n                    onChange={onChangeField}\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={12} className={styles.SaveButtonWrap}>\n                <Button type='submit' variant='contained' color='primary' size='large'>Сохранить</Button>\n              </Grid>\n            </Grid>\n          </form>\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n          <MaterialTable\n            title=\"Банковские реквизиты компании\"\n            columns={columns}\n            data={details}\n            localization={{\n              pagination: {\n                labelDisplayedRows: '{from}-{to} из {count}'\n              },\n              toolbar: {\n                nRowsSelected: '{0} строк выбрано'\n              },\n              header: {\n                actions: 'Действия'\n              },\n              body: {\n                emptyDataSourceMessage: 'Нет данных для отображения',\n                filterRow: {\n                  filterTooltip: 'Фильтр'\n                }\n              }\n            }}\n            editable={{\n              onRowAdd: newData => {\n                return createBankDetails(id, newData)\n                  .then(({ data }) => {\n                    setDetails([...details, newData])\n                    setAlert({open: true, type: 'success', message: 'Успешно добавлено'})\n                  })\n                  .catch(error => {\n                    setAlert({open: true, type: 'error', message: 'Во время добавления произошла ошибка'})\n                  })\n              },\n              onRowUpdate: (newData, oldData) => {\n                console.log(oldData, newData)\n                return patchBankDetails(id, oldData.id, newData)\n                  .then(({ data }) => {\n                    setDetails(details.map(d => {\n                      if (d.id !== oldData.id) {\n                        return d\n                      }\n                      return newData\n                    }))\n                    setAlert({open: true, type: 'success', message: 'Успешно обновлено'})\n                  })\n                  .catch(error => {\n                    setAlert({open: true, type: 'error', message: 'Во время обновления произошла ошибка'})\n                  })\n              },\n              onRowDelete: oldData => {\n                return deleteBankDetails(id, oldData.id)\n                  .then(({ data }) => {\n                    setDetails(details.filter(d => d.id !== oldData.id))\n                    setAlert({open: true, type: 'success', message: 'Успешно удалено'})\n                  })\n                  .catch(error => {\n                    setAlert({open: true, type: 'error', message: 'Во время удаления произошла ошибка'})\n                  })\n              },\n            }}\n          />\n        </TabPanel>\n      </>}\n    </Paper>\n\n    <Snackbar open={alert.open} autoHideDuration={6000} onClose={handleCloseAlert}>\n      <Alert onClose={handleCloseAlert} severity={alert.type}>\n        {alert.message}\n      </Alert>\n    </Snackbar>\n  </>\n}\n","import { httpClient } from '../../httpClient'\n\nexport function getBankDetails({ companyId, ordering, search, page }) {\n    return httpClient.get(`/companies/${companyId}/bank_details/`, {\n        params: {\n            page,\n            ordering,\n            search,\n        }\n    })\n}\n","import { httpClient } from '../../httpClient'\n\nexport function createBankDetails(companyId, data) {\n    return httpClient.post(`/companies/${companyId}/bank_details/`, data)\n}\n","import { httpClient } from '../../httpClient'\n\nexport function patchBankDetails(companyId, id, data) {\n    return httpClient.patch(`/companies/${companyId}/bank_details/${id}/`, data)\n}\n","import { httpClient } from '../../httpClient'\n\nexport function deleteBankDetails(companyId, id) {\n    return httpClient.delete(`/companies/${companyId}/bank_details/${id}/`)\n}\n","import { useEffect, useState } from 'react'\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport { UserContext } from './core/UserContext'\nimport { getMe } from './core/api/user/me'\nimport { createToken } from './core/api/token/createToken'\n\nimport { DefaultLayout } from './layouts/DefaultLayout'\n\nimport { PageLogin } from './pages/PageLogin/PageLogin'\nimport { PageCustomerList } from './pages/PageCustomerList'\nimport { PageCustomerEdit } from './pages/PageCustomerEdit'\n\nimport './App.css'\n\nconst ACCESS_TOKEN_KEY = 'token/access'\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  useEffect(() => {\n    getMe()\n      .then(({ data }) => {\n        setUser(data)\n      })\n      .catch(console.error)\n  },[])\n  function login({email, password}) {\n    return createToken({email, password})\n      .then(({ data }) => {\n          if (data.access) {\n              localStorage.setItem(ACCESS_TOKEN_KEY, data.access)\n          } else {\n              throw data\n          }\n      })\n      .then(getMe)\n      .then(({ data }) => {\n          setUser(data)\n      })\n  }\n  function logout() {\n    localStorage.removeItem(ACCESS_TOKEN_KEY)\n    setUser(null)\n  }\n  const ctxUser = {\n    user,\n    login,\n    logout,\n  }\n\n  let body = null\n  if (!user) {\n    body = (\n      <PageLogin login={login}  />\n    )\n  } else {\n    body = (\n      <DefaultLayout logout={logout}>\n        <Switch>\n          <Route exact path='/'>\n            <PageCustomerList />\n          </Route>\n          <Route path='/company/:id'>\n            <PageCustomerEdit />\n          </Route>\n        </Switch>\n      </DefaultLayout>\n    )\n  }\n\n  return (\n    <Router>\n      <UserContext.Provider value={ctxUser}>\n        {body}\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { httpClient } from '../httpClient'\n\nexport function createToken({ email, password }) {\n    return httpClient.post('/token/', { email, password })\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}